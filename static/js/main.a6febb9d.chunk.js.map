{"version":3,"sources":["components/Message/Message.js","components/Home/Home.js","index.js"],"names":["Message","index","message","currentUser","useEffect","console","log","className","from","Home","useState","isLoggedIn","setIsLoggedIn","name","setName","socket","setSocket","messages","setMessages","inputMessage","setInputMessage","messagesContainerRef","useRef","on","id","data","alert","disconnect","emit","prevState","current","scrollTop","scrollHeight","onSubmit","event","preventDefault","socketio","transports","auth","prevSocket","handleSubmit","placeholder","value","onChange","target","type","ref","map","item","e","handleSendMessage","ReactDOM","render","document","getElementById"],"mappings":"oQAGe,SAASA,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,YAK7C,OAJAC,qBAAU,WACNC,QAAQC,IAAI,gBAAiBH,KAE9B,IAEC,sBAAKI,UAAS,2BAAuBL,EAAQM,OAAOL,EAAa,QAAQ,OAA3D,YAA8E,IAARF,EAAW,UAAU,IAAzG,UACI,qBAAKM,UAAU,aAAf,SAA6BL,EAAQM,OACrC,qBAAKD,UAAU,iBAAf,SAAiCL,EAAQA,aCNrD,IAyFeO,EAzFF,WAET,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMC,EAAuBC,mBAe7BlB,qBAAU,WACHW,IACCA,EAAOQ,GAAG,WAAW,WACjBlB,QAAQC,IAAI,mBAAoBS,EAAOS,OAE3CT,EAAOQ,GAAG,sBAAsB,SAACE,GAC7BpB,QAAQC,IAAImB,GACZC,MAAM,6BAENX,EAAOY,gBAEXZ,EAAOQ,GAAG,0BAA0B,SAAAE,IACtB,IAAPA,GACCb,GAAc,GAElBG,EAAOa,KAAK,UAAW,CAACJ,GAAIT,EAAOS,GAAItB,QAAS,6BAEpDa,EAAOQ,GAAG,WAAW,SAACE,GAClBpB,QAAQC,IAAImB,GACZP,GAAY,SAAAW,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBJ,OAG1BJ,EAAqBS,QAAQC,UAAYV,EAAqBS,QAAQE,mBAM/E,CAACjB,IAUJ,OACkB,IAAbJ,EACD,uBAAMsB,SAAU,SAACC,GAAD,OAtDC,SAACA,GAGlB,GAFAA,EAAMC,iBACN9B,QAAQC,IAAW,KAAPO,GACF,KAAPA,EAAU,CACT,IAAME,EAASqB,IAAS,yCAA0C,CAC9DC,WAAY,CAAC,aACbC,KAAM,CAACzB,UAEXR,QAAQC,IAAIS,GACZC,GAAU,SAAAuB,GAAU,OAAExB,MA6CDyB,CAAaN,IAAQ3B,UAAU,YAAxD,UACI,uBAAOA,UAAU,aAAakC,YAAY,iBAAiBC,MAAO7B,EAAM8B,SAAU,SAAAT,GAAK,OAAEpB,EAAQoB,EAAMU,OAAOF,UAC9G,wBAAQnC,UAAU,cAAcsC,KAAK,SAArC,sBAGJ,sBAAKtC,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAqBuC,IAAKzB,EAAzC,SACKJ,EAAS8B,KAAI,SAACC,EAAM/C,GAAP,OAAe,cAAC,EAAD,CAAqBA,MAAOA,EAAOC,QAAS8C,EAAM7C,YAAaU,GAAjDZ,QAE/C,uBAAMM,UAAU,uBAAuB0B,SAAU,SAAAgB,GAAC,OAnBhC,SAACA,GACvBA,EAAEd,iBACgB,KAAfhB,GACCJ,EAAOa,KAAK,UAAW,CAACJ,GAAIT,EAAOS,GAAItB,QAASiB,IAEpDC,EAAgB,IAcwC8B,CAAkBD,IAAtE,UACI,uBACI1C,UAAU,mBACVkC,YAAY,kBACZC,MAAOvB,EACPwB,SAAU,SAAAM,GAAC,OAAE7B,EAAgB6B,EAAEL,OAAOF,UAE1C,wBACInC,UAAU,oBACVsC,KAAK,SAFT,yBC/EhBM,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a6febb9d.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport './Message.css'\r\n\r\nexport default function Message({index, message, currentUser}) {\r\n    useEffect(() => {\r\n        console.log(\"currentUser: \", currentUser)\r\n        \r\n    }, [])\r\n    return (\r\n        <div className={`messageContainer ${(message.from===currentUser)?'right':'left'} ${(index===0)?'mt-auto':''}`}>\r\n            <div className='senderName'>{message.from}</div>\r\n            <div className='messageContent'>{message.message}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport socketio from 'socket.io-client';\r\nimport './Home.css'\r\nimport Message from '../Message/Message';\r\n\r\nconst Home = () => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [socket, setSocket] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    const messagesContainerRef = useRef();\r\n\r\n    const handleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        console.log(name==='');\r\n        if(name!==''){\r\n            const socket = socketio('https://chat-app-ukd-v1.herokuapp.com/', {\r\n                transports: ['websocket'],\r\n                auth: {name}\r\n                });\r\n            console.log(socket)\r\n            setSocket(prevSocket=>socket) \r\n        }       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(socket){\r\n            socket.on('connect', ()=>{\r\n                console.log('socket connected', socket.id)\r\n            });\r\n            socket.on('name already taken', (data)=>{\r\n                console.log(data);\r\n                alert('username is already taken');\r\n                // socket.off();\r\n                socket.disconnect();\r\n            });\r\n            socket.on('connection-established', data=>{\r\n                if(data===true){\r\n                    setIsLoggedIn(true)\r\n                }\r\n                socket.emit('message', {id: socket.id, message: 'Thanks for adding me!'})\r\n            })\r\n            socket.on('message', (data)=>{\r\n                console.log(data);\r\n                setMessages(prevState=>{\r\n                    return [...prevState, data]\r\n                });\r\n                // console.log(messagesContainerRef.current.scrollHeight)\r\n                messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\r\n            })\r\n        }\r\n        // return () => {\r\n        //     // cleanup\r\n        // }\r\n    }, [socket])\r\n\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if(inputMessage!==''){\r\n            socket.emit('message', {id: socket.id, message: inputMessage});\r\n        }\r\n        setInputMessage('');\r\n    }\r\n\r\n    return(\r\n        (isLoggedIn===false)?\r\n        <form onSubmit={(event)=>handleSubmit(event)} className='loginForm'>\r\n            <input className='loginInput' placeholder='Enter the name' value={name} onChange={event=>setName(event.target.value)}></input>\r\n            <button className='loginButton' type='submit'>Login</button>\r\n        </form>\r\n        :\r\n        <div className='chat-window'>\r\n            <div className='messages-container' ref={messagesContainerRef}>\r\n                {messages.map((item, index)=><Message key={index} index={index} message={item} currentUser={name}/>)}\r\n            </div>\r\n            <form className='sendMessageContainer' onSubmit={e=>handleSendMessage(e)}>\r\n                <input \r\n                    className='sendMessageInput'\r\n                    placeholder='Start Typing...'\r\n                    value={inputMessage}\r\n                    onChange={e=>setInputMessage(e.target.value)}\r\n                    />\r\n                <button \r\n                    className='sendMessageButton'\r\n                    type='submit'                    \r\n                    >Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './inde.css'\r\n\r\nimport Home from './components/Home/Home'\r\n\r\nReactDOM.render(\r\n    <Home />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}